{
  parserClass="nl.theepicblock.intellijkdl.KdlParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Kdl"
  psiImplClassSuffix="Impl"
  psiPackage="nl.theepicblock.intellijkdl.psi"
  psiImplPackage="nl.theepicblock.intellijkdl.psi.impl"

  elementTypeHolderClass="nl.theepicblock.intellijkdl.psi.KdlTypes"
  elementTypeClass="nl.theepicblock.intellijkdl.KdlElementType"
  tokenTypeClass="nl.theepicblock.intellijkdl.KdlTokenType"
}

kdlFile ::= nodes

//nodes ::= linespace* (node_ nodes?)? linespace*
nodes ::= node_*

node_ ::= (ctxcomment escline*)? type? node-identifier (escline* node-prop-or-arg)* (escline* node-children)? escline* node-terminator?
node-identifier ::= node-identifier-string | node-bareidentifier
node-prop-or-arg ::= (ctxcomment escline*)? (prop | value)
node-children ::= (ctxcomment escline*)? startnode-wrapper nodes endnode
startnode-wrapper ::= startnode
node-terminator ::= semicolon

prop ::= identifier equals value

escline ::= backslash (/*single-line-comment |*/)

value ::= type? (string-literal | number | keyword)
string-literal ::= string
type ::= starttype identifier endtype

identifier ::= string | bareidentifier

number ::= decimal | hex | octal | binary

keyword ::= boolean | null